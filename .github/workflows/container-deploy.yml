name: container-deploy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
        shell: bash
    environment: production
    env:
      working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: us-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push health lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: engineering_signal_collector_prd
          IMAGE_TAG: health_api-${{ github.run_number }}
        run: |
          docker build -f build/agents/health_api.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push github agent lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: engineering_signal_collector_prd
          IMAGE_TAG: agent_github-${{ github.run_number }}
        run: |
          docker build -f build/agents/agent_github.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg aws_secret_key=${{ secrets.AWS_ACCESS_KEY_SECRET }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push signal orchestrator lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: engineering_signal_collector_prd
          IMAGE_TAG: signal_orchestrator-${{ github.run_number }}
        run: |
          docker build -f build/pipeline/signal_orchestrator.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg aws_secret_key=${{ secrets.AWS_ACCESS_KEY_SECRET }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push signal persistance lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: engineering_signal_collector_prd
          IMAGE_TAG: signal_persistance-${{ github.run_number }}
        run: |
          docker build -f build/pipeline/signal_persistance.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg aws_secret_key=${{ secrets.AWS_ACCESS_KEY_SECRET }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG