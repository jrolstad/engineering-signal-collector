name: application-continuous-integration

on:
  workflow_dispatch:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
        shell: bash
    environment: production
    env:
      working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Golang
        uses: actions/setup-go@v3
        with:
            go-version: '>=1.18.0'

      - name: Install Dependencies
        run: go mod download

      - name: Build Project
        run: go build ./...

      - name: Run Unit Tests
        run: go test ./...

      - name: Build Docker Images
        env:
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -f build/agents/health_api.dockerfile -t health_api:$IMAGE_TAG .
          docker build -f build/agents/agent_github.dockerfile -t github_agent:$IMAGE_TAG .
          docker build -f build/pipeline/signal_orchestrator.dockerfile -t signal_orchestrator:$IMAGE_TAG .
          docker build -f build/pipeline/signal_persistance.dockerfile -t signal_orchestrator:$IMAGE_TAG .
          docker build -f build/pipeline/signal_transformation.dockerfile -t signal_orchestrator:$IMAGE_TAG .
          docker build -f build/pipeline/standardized_persistance.dockerfile -t signal_orchestrator:$IMAGE_TAG .
          docker build -f build/pipeline/policy_measurement.dockerfile -t signal_orchestrator:$IMAGE_TAG .
          docker build -f build/pipeline/policy_persistance.dockerfile -t signal_orchestrator:$IMAGE_TAG .
